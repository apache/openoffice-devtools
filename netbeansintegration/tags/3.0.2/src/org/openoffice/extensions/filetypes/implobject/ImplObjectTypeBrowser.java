/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/

package org.openoffice.extensions.filetypes.implobject;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import org.openide.DialogDescriptor;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.BeanTreeView;
import org.openide.nodes.Node;
import org.openoffice.extensions.util.datamodel.NbNodeObject;
import org.openoffice.extensions.util.typebrowser.logic.TypeNode;

/**
 *
 * @author  sg128468
 */
public class ImplObjectTypeBrowser extends javax.swing.JPanel 
        implements ExplorerManager.Provider, ActionListener {
    
    private ExplorerManager manager = new ExplorerManager();

    private TypeNode rootNode;

    private ImplObjectVisualPanel1 comp;
    
    /** Creates new form ImplObjectTypeBrowser */
    public ImplObjectTypeBrowser(ImplObjectVisualPanel1 comp, String[] allowedNodes, NbNodeObject[] ownIdlTypes) {
        initComponents();
        
        this.comp = comp;
        TypeNode.setDesignedTypes(ownIdlTypes);
        this.rootNode = TypeNode.createRootNode(allowedNodes);
        manager.setRootContext(rootNode);
        
        BeanTreeView typeView = (BeanTreeView)jScrollPane1;
        if (rootNode.getChildren().getNodesCount() != 0) // display error message correctly if needed
            typeView.setRootVisible(false);
        else
            typeView.setRootVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new BeanTreeView();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public ExplorerManager getExplorerManager() {
        return manager;
    }
    
    protected void addDialogDescriptor(DialogDescriptor ddsc) {
//        this.dialogDescriptor = ddsc;
        ddsc.setButtonListener(this);

        // set help context eventually
//        dialogDescriptor.setHelpCtx(new HelpCtx("helpCtxString")); // NOI18N  
    }

    public void actionPerformed(ActionEvent e) {
        if (e.getActionCommand().equals("OK")) { // NOI18N
            Node[] nodes = manager.getSelectedNodes();
            comp.setNodes(nodes);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
}
